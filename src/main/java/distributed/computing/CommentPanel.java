/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package distributed.computing;

import distributed.computing.domain.model.Comment;
import distributed.computing.sevice.CommentRatingService;
import javax.swing.JOptionPane;

/**
 *
 * @author dev
 */
public class CommentPanel extends javax.swing.JPanel {

    private Comment comment;
    private CommentRatingService commentRatingService = new CommentRatingService();
    /**
     * Creates new form CommentPanel
     */
    public CommentPanel(Comment comment) {
        this.comment = comment;
        initComponents();
        
        txtCmnt.setText(comment.getComment());
        int updatedRating = commentRatingService.getCommentRating(comment.getCommentId())[0];
        int ratingCount = commentRatingService.getCommentRating(comment.getCommentId())[1];
        lblCmntRating.setText("☆ " + updatedRating + " / out of " + ratingCount + " ratings");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbRate = new javax.swing.JComboBox<>();
        btnRateCmnt = new javax.swing.JButton();
        lblCmntRating = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCmnt = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setPreferredSize(new java.awt.Dimension(560, 114));

        cmbRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));

        btnRateCmnt.setText("Rate");
        btnRateCmnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRateCmntActionPerformed(evt);
            }
        });

        txtCmnt.setEditable(false);
        txtCmnt.setColumns(20);
        txtCmnt.setRows(5);
        txtCmnt.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(txtCmnt);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCmntRating, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                        .addComponent(cmbRate, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRateCmnt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRateCmnt))
                    .addComponent(lblCmntRating, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRateCmntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRateCmntActionPerformed
        int rate = cmbRate.getSelectedIndex();
        if (rate == 0) {
            JOptionPane.showMessageDialog(btnRateCmnt, "Select comment rating");
        } else {
            commentRatingService.saveCommentRating(comment.getCommentId(), comment.getNode(), rate);
            int updatedRating = commentRatingService.getCommentRating(comment.getCommentId())[0];
            int ratingCount = commentRatingService.getCommentRating(comment.getCommentId())[1];
            lblCmntRating.setText("☆ " + updatedRating + " / out of " + ratingCount + " ratings");
            JOptionPane.showMessageDialog(btnRateCmnt, "Rating submitted!");
        }
    }//GEN-LAST:event_btnRateCmntActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRateCmnt;
    private javax.swing.JComboBox<String> cmbRate;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblCmntRating;
    private javax.swing.JTextArea txtCmnt;
    // End of variables declaration//GEN-END:variables
}
